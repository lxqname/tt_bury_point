<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--客户映射 指定到dao接口 -->
<mapper namespace="com.deepexi.bury.point.mapper.BuryPointMessageMapper">
    <resultMap type="com.deepexi.bury.point.domain.dto.BuryPointMessageDto" id="BuryPointMessageDtoResult">
        <result property="id" column="id"/>
        <result property="env" column="env"/>
        <result property="time" column="time"/>
        <result property="type" column="type"/>
        <result property="event" column="event"/>
        <result property="tenantCode" column="tenant_code"/>
        <result property="createdAt" column="created_at"/>
        <result property="createdBy" column="created_by"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="updatedBy" column="updated_by"/>
        <result property="version" column="version"/>
        <result property="dr" column="dr"/>
    </resultMap>
    <sql id="Base_Column_List">
      id,      env,      time,      type,      event,      tenant_code,      created_at,      created_by,      updated_at,      updated_by,      version,      dr    </sql>
    <select id="findList" resultType="com.deepexi.bury.point.domain.eo.BuryPointMessage">
        SELECT
        <include refid="Base_Column_List"/>
        FROM bury_point_message WHERE dr=0
    </select>
    <insert id="batchInsert">
        INSERT INTO bury_point_message
        ( id, env, time, type, event, tenant_code, created_at, created_by, updated_at, updated_by, version, dr)
        VALUES
        <foreach collection="eo" index="index" item="value" separator=",">
            ( #{value.id}, #{value.env}, #{value.time}, #{value.type}, #{value.event}, #{value.tenantCode},
            #{value.createdAt}, #{value.createdBy}, #{value.updatedAt}, #{value.updatedBy}, #{value.version},
            #{value.dr})
        </foreach>
    </insert>
    <update id="batchUpdate">
        INSERT INTO bury_point_message
        ( id, env, time, type, event, tenant_code, created_at, created_by, updated_at, updated_by, version, dr)
        VALUES
        <foreach collection="eo" index="index" item="value" separator=",">
            ( #{value.id}, #{value.env}, #{value.time}, #{value.type}, #{value.event}, #{value.tenantCode},
            #{value.createdAt}, #{value.createdBy}, #{value.updatedAt}, #{value.updatedBy}, #{value.version},
            #{value.dr})
        </foreach>
        ON DUPLICATE KEY UPDATE
        id=values(id), env=values(env), time=values(time), type=values(type), event=values(event),
        tenant_code=values(tenant_code), created_at=values(created_at), created_by=values(created_by),
        updated_at=values(updated_at), updated_by=values(updated_by), version=values(version), dr=values(dr)
    </update>
    <update id="deleteByIds">
        UPDATE bury_point_message set dr=1 where id in
        <foreach collection="pks" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="realDelete">
        DELETE FROM bury_point_message where id = #{pk}
    </delete>

</mapper>