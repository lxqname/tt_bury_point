
log.env.logger.level=info
spring.datasource.url=jdbc:mysql://203.195.136.11:3306/dev_tt_bury_point_center?useUnicode=true&allowMultiQueries=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.username = root
spring.datasource.password = cdpwy123
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
# 数据库连接心跳:关闭的话数据库socket会断掉
spring.datasource.test-while-idle=true
spring.datasource.validation-query=SELECT 1

# 开发环境(create-drop)(create)(update) 生产环境(none) ref: http://blog.csdn.net/zwhfyy/article/details/4514966
spring.jpa.hibernate.ddl-auto = none
spring.jpa.hibernate.dialect = org.hibernate.dialect.MySQLInnoDBDialect
# spring.jpa.show-sql = true
# 不明确指定database, spring-boot会根据classpath中的依赖项自动配置
spring.jpa.database = MYSQL

dubbo.registry.address = zookeeper://203.195.136.11:2181

# 缓存类型single(单点),sentinel(哨兵),cluster(集群)
redis.type=single
redis.dbIndex=1
redis.addresses=203.195.136.11:6379
# 连接池
redis.maxTotal=10
redis.maxIdle=10
redis.maxWaitMillis=30000



# rabbitmq
deepexi.mq.messageRegistryVo.type = rabbit
#单机使用
#deepexi.mq.messageRegistryVo.host = 203.195.136.11
#deepexi.mq.messageRegistryVo.port = 5672
#集群使用addresses:ip1:port1,ip2:port2,ip3:port3
deepexi.mq.messageRegistryVo.addresses = 203.195.136.11:5672
deepexi.mq.messageRegistryVo.username = guest
deepexi.mq.messageRegistryVo.password = guest




